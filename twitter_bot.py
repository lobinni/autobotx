import tweepy
import openai
import os
import time
import random
from dotenv import load_dotenv

# Load API keys t·ª´ file .env
load_dotenv()

# Danh s√°ch 5 t√†i kho·∫£n bot
ACCOUNTS = []
for i in range(1, 6):  # 5 t√†i kho·∫£n
    ACCOUNTS.append({
        "API_KEY": os.getenv(f"API_KEY_{i}"),
        "API_SECRET": os.getenv(f"API_SECRET_{i}"),
        "ACCESS_TOKEN": os.getenv(f"ACCESS_TOKEN_{i}"),
        "ACCESS_SECRET": os.getenv(f"ACCESS_SECRET_{i}"),
    })

# ID t√†i kho·∫£n m·ª•c ti√™u
TARGET_USER_ID = os.getenv("TARGET_USER_ID")

# OpenAI API Key
openai.api_key = os.getenv("OPENAI_API_KEY")

# H√†m t·∫°o ph·∫£n h·ªìi b·∫±ng OpenAI GPT-4
def generate_reply(tweet_text):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "B·∫°n l√† m·ªôt chatbot Twitter th√¥ng minh, h√†i h∆∞·ªõc v√† t·ª± nhi√™n."},
                {"role": "user", "content": tweet_text}
            ]
        )
        return response["choices"][0]["message"]["content"]
    except Exception as e:
        print(f"‚ö†Ô∏è AI Error: {e}")
        return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ tr·∫£ l·ªùi ngay b√¢y gi·ªù!"

# H√†m x·ª≠ l√Ω tweet (Like, Retweet, Reply)
def interact_with_tweets(api, account_number):
    try:
        print(f"‚úÖ [Account {account_number}] Fetching tweets from target ID: {TARGET_USER_ID}")
        tweets = api.user_timeline(user_id=TARGET_USER_ID, count=5, tweet_mode="extended")

        if not tweets:
            print(f"‚ùå [Account {account_number}] No tweets found for target ID: {TARGET_USER_ID}")
            return

        for tweet in tweets:
            tweet_id = tweet.id
            tweet_text = tweet.full_text
            print(f"üü¢ [Account {account_number}] Processing Tweet {tweet_id}: {tweet_text}")

            # Like Tweet
            try:
                api.create_favorite(tweet_id)
                print(f"‚úÖ [Account {account_number}] Liked Tweet {tweet_id}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] Like Error: {e}")

            # Retweet
            try:
                api.retweet(tweet_id)
                print(f"üîÅ [Account {account_number}] Retweeted Tweet {tweet_id}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] Retweet Error: {e}")

            # Reply v·ªõi AI-generated content
            try:
                reply_text = generate_reply(tweet_text)
                api.update_status(f"@{tweet.user.screen_name} {reply_text}", in_reply_to_status_id=tweet_id)
                print(f"üí¨ [Account {account_number}] Replied: {reply_text}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] Reply Error: {e}")

            time.sleep(random.randint(15, 45))  # Delay ng·∫´u nhi√™n ƒë·ªÉ tr√°nh spam

    except Exception as e:
        print(f"‚ö†Ô∏è [Account {account_number}] Error processing target account: {e}")

# Ch·∫°y bot cho t·∫•t c·∫£ c√°c t√†i kho·∫£n
while True:
    for i, account in enumerate(ACCOUNTS):
        try:
            auth = tweepy.OAuthHandler(account["API_KEY"], account["API_SECRET"])
            auth.set_access_token(account["ACCESS_TOKEN"], account["ACCESS_SECRET"])
            api = tweepy.API(auth, wait_on_rate_limit=True)

            print(f"üöÄ Running bot for account {i+1}...")
            interact_with_tweets(api, i + 1)
        except Exception as e:
            print(f"‚ö†Ô∏è Error running bot for account {i+1}: {e}")

    print("‚è≥ Waiting 5 minutes before running again...")
    time.sleep(300)  # Ch·ªù 5 ph√∫t tr∆∞·ªõc khi ch·∫°y l·∫°i
