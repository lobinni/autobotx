import tweepy
import openai
import os
import time
import random
from dotenv import load_dotenv

# Load API keys t·ª´ .env
load_dotenv()

# Danh s√°ch t√†i kho·∫£n Twitter
ACCOUNTS = []
for i in range(1, 6):  # 5 accounts
    ACCOUNTS.append({
        "API_KEY": os.getenv(f"API_KEY_{i}"),
        "API_SECRET": os.getenv(f"API_SECRET_{i}"),
        "ACCESS_TOKEN": os.getenv(f"ACCESS_TOKEN_{i}"),
        "ACCESS_SECRET": os.getenv(f"ACCESS_SECRET_{i}"),
    })

# T√†i kho·∫£n X (Twitter) m·ª•c ti√™u
TARGET_USERNAME = os.getenv("TARGET_USERNAME")

# Kh·ªüi t·∫°o OpenAI API
openai.api_key = os.getenv("OPENAI_API_KEY")

# H√†m t·∫°o ph·∫£n h·ªìi t·ª´ AI (GPT-4)
def generate_reply(tweet_text):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "system", "content": "B·∫°n l√† m·ªôt chatbot Twitter th√¥ng minh v√† h√†i h∆∞·ªõc."},
                      {"role": "user", "content": tweet_text}]
        )
        return response["choices"][0]["message"]["content"]
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói AI: {e}")
        return "T√¥i ch∆∞a th·ªÉ tr·∫£ l·ªùi l√∫c n√†y, h√£y th·ª≠ l·∫°i sau!"

# H√†m x·ª≠ l√Ω t∆∞∆°ng t√°c v·ªõi tweet
def interact_with_tweets(api, client, account_number):
    try:
        target_user = client.get_user(username=TARGET_USERNAME).data
        target_user_id = target_user.id
        print(f"‚úÖ ƒê√£ t√¨m th·∫•y t√†i kho·∫£n m·ª•c ti√™u: {target_user.username} (ID: {target_user_id})")

        # L·∫•y danh s√°ch tweet g·∫ßn ƒë√¢y c·ªßa target
        tweets = client.get_users_tweets(id=target_user_id, max_results=5, tweet_fields=["id", "text"])
        if not tweets or not tweets.data:
            print(f"‚ùå Kh√¥ng t√¨m th·∫•y tweet n√†o c·ªßa @{TARGET_USERNAME}")
            return

        for tweet in tweets.data:
            tweet_id = tweet.id
            tweet_text = tweet.text
            print(f"üü¢ [Account {account_number}] X·ª≠ l√Ω Tweet {tweet_id}: {tweet_text}")

            # Like Tweet
            try:
                client.like(tweet_id)
                print(f"‚úÖ [Account {account_number}] ƒê√£ Like Tweet {tweet_id}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] L·ªói Like: {e}")

            # Retweet Tweet
            try:
                client.retweet(tweet_id)
                print(f"üîÅ [Account {account_number}] ƒê√£ Retweet Tweet {tweet_id}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] L·ªói Retweet: {e}")

            # Reply v·ªõi AI-generated message
            try:
                reply_text = generate_reply(tweet_text)
                api.update_status(f"@{TARGET_USERNAME} {reply_text}", in_reply_to_status_id=tweet_id)
                print(f"üí¨ [Account {account_number}] ƒê√£ Reply: {reply_text}")
            except Exception as e:
                print(f"‚ö†Ô∏è [Account {account_number}] L·ªói Reply: {e}")

            time.sleep(random.randint(15, 45))  # Random delay ƒë·ªÉ tr√°nh spam

    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi x·ª≠ l√Ω t√†i kho·∫£n m·ª•c ti√™u: {e}")

# Ch·∫°y bot v·ªõi t·∫•t c·∫£ t√†i kho·∫£n
while True:
    for i, account in enumerate(ACCOUNTS):
        try:
            auth = tweepy.OAuth1UserHandler(
                account["API_KEY"], account["API_SECRET"],
                account["ACCESS_TOKEN"], account["ACCESS_SECRET"]
            )
            api = tweepy.API(auth, wait_on_rate_limit=True)
            client = tweepy.Client(bearer_token=account["ACCESS_TOKEN"])

            print(f"üöÄ ƒêang ch·∫°y bot cho t√†i kho·∫£n {i+1}...")
            interact_with_tweets(api, client, i + 1)

        except Exception as e:
            print(f"‚ö†Ô∏è L·ªói khi ch·∫°y bot cho t√†i kho·∫£n {i+1}: {e}")

    print("‚è≥ ƒê·ª£i 5 ph√∫t tr∆∞·ªõc khi ch·∫°y l·∫°i...")
    time.sleep(300)  # 5 ph√∫t
